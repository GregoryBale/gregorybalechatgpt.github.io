// –°–ø–∏—Å–æ–∫ API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const imageGenerationApis = [
    { url: 'https://api.paxsenix.biz.id/ai-image/fluxSchnell?text=', name: 'FluxSchnell' },
    { url: 'https://api.paxsenix.biz.id/ai-image/fluxPro?text=', name: 'FluxPro' },
    { url: 'https://api.paxsenix.biz.id/ai-image/sdxlImage?text=', name: 'SDXL Image' },
    { url: 'https://api.paxsenix.biz.id/ai-image/magicstudio?text=', name: 'Magic Studio' },
    { url: 'https://api.paxsenix.biz.id/ai-image/dreamshaper?text=', name: 'Dreamshaper' },
    { url: 'https://api.paxsenix.biz.id/ai-image/pixelart?text=', name: 'PixelArt' },
    { url: 'https://api.paxsenix.biz.id/ai-image/midjourney?text=', name: 'Midjourney' },
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function tryGenerateImage(api, prompt) {
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const initialResponse = await fetch(`${api.url}${encodeURIComponent(prompt)}`);
        const initialData = await initialResponse.json();

        if (initialData.ok && initialData.task_url) {
            // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
            let statusData;
            do {
                await new Promise(resolve => setTimeout(resolve, 3000)); // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã
                const statusResponse = await fetch(initialData.task_url);
                statusData = await statusResponse.json();

                if (statusData.ok && statusData.status === "done") {
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
                    return { ok: true, url: statusData.url, model: api.name };
                }
            } while (statusData.status === "pending");

            console.error(`API ${api.name} –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é. –°—Ç–∞—Ç—É—Å: ${statusData.status}`);
        } else {
            console.error(`–û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –∑–∞–ø—Ä–æ—Å–∞: ${initialData.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        }
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –≤ API ${api.name}:`, error);
    }
    return { ok: false };
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö API
async function generateImage(prompt) {
    const shuffledApis = [...imageGenerationApis].sort(() => Math.random() - 0.5);

    for (const api of shuffledApis) {
        const result = await tryGenerateImage(api, prompt);
        if (result.ok) {
            return result;
        }
    }

    return { ok: false, error: "üòî –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∏ —Å –æ–¥–Ω–æ–π –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö API." };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /image
window.handleImageGeneration = async function (message) {
    const prompt = message.slice(7).trim(); // –£–¥–∞–ª—è–µ–º '/image ' –∏–∑ –Ω–∞—á–∞–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    addMessage(`üñå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${prompt}"`, false);

    try {
        // –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
        const translationResponse = await fetch(`https://api.paxsenix.biz.id/ai/gpt3?text=${encodeURIComponent(`–ø–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: ${prompt}`)}`);
        const translationData = await translationResponse.json();

        if (translationData.ok) {
            const englishPrompt = translationData.response.replace(/^"|"$/g, ''); // –£–¥–∞–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏
            const imageResult = await generateImage(englishPrompt);

            if (imageResult.ok) {
                const imageMessage = `
                    <img src="${imageResult.url}" alt="üñå –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" style="max-width: 100%; height: auto;">
                    <p class="model-info" style="font-size: 0.8em; color: #666; margin-top: 5px;">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –º–æ–¥–µ–ª–∏: ${imageResult.model}</p>
                    <a href="${imageResult.url}" download="generated_image.png" class="download-button">–°–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</a>
                `;
                addMessage(imageMessage, false);
            } else {
                addMessage("üòî –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", false);
            }
        } else {
            addMessage("üòî –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", false);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
        addMessage("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", false);
    }
};
